/*
github.com/radu-matei/event-operator
*/
// This file was automatically generated by lister-gen

package v1alpha1

import (
	v1alpha1 "github.com/radu-matei/events-operator/pkg/apis/eventprovider/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// EventProviderLister helps list EventProviders.
type EventProviderLister interface {
	// List lists all EventProviders in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.EventProvider, err error)
	// EventProviders returns an object that can list and get EventProviders.
	EventProviders(namespace string) EventProviderNamespaceLister
	EventProviderListerExpansion
}

// eventProviderLister implements the EventProviderLister interface.
type eventProviderLister struct {
	indexer cache.Indexer
}

// NewEventProviderLister returns a new EventProviderLister.
func NewEventProviderLister(indexer cache.Indexer) EventProviderLister {
	return &eventProviderLister{indexer: indexer}
}

// List lists all EventProviders in the indexer.
func (s *eventProviderLister) List(selector labels.Selector) (ret []*v1alpha1.EventProvider, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.EventProvider))
	})
	return ret, err
}

// EventProviders returns an object that can list and get EventProviders.
func (s *eventProviderLister) EventProviders(namespace string) EventProviderNamespaceLister {
	return eventProviderNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// EventProviderNamespaceLister helps list and get EventProviders.
type EventProviderNamespaceLister interface {
	// List lists all EventProviders in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.EventProvider, err error)
	// Get retrieves the EventProvider from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.EventProvider, error)
	EventProviderNamespaceListerExpansion
}

// eventProviderNamespaceLister implements the EventProviderNamespaceLister
// interface.
type eventProviderNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all EventProviders in the indexer for a given namespace.
func (s eventProviderNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.EventProvider, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.EventProvider))
	})
	return ret, err
}

// Get retrieves the EventProvider from the indexer for a given namespace and name.
func (s eventProviderNamespaceLister) Get(name string) (*v1alpha1.EventProvider, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("eventprovider"), name)
	}
	return obj.(*v1alpha1.EventProvider), nil
}
